@model Bonsaii.Models.StaffApplications

@{
    ViewBag.Title = "Create";
}
<link href="~/Content/css/bootstrap-datetimepicker.min.css" rel="stylesheet" />
<script src="~/Scripts/datetimepicker/bootstrap-datetimepicker.min.js"></script>
<script src="~/Scripts/datetimepicker/bootstrap-datetimepicker.zh-CN.js"></script>
<script src="~/Scripts/bootstrap3-typeahead.min.js"></script>
<h2>创建新的离职申请单</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        @*<h4>StaffApplications</h4>*@
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.BillTypeNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.BillTypeNumber, new { htmlAttributes = new { @class = "form-control",@dataprovide="typehead" } })
                @Html.ValidationMessageFor(model => model.BillTypeNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BillTypeName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.BillTypeName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.BillTypeName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BillNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.BillNumber, new { htmlAttributes = new { @class = "form-control"} })
                @Html.ValidationMessageFor(model => model.BillNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.StaffNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.StaffNumber, new { htmlAttributes = new { @class = "form-control", @dataprovider = "typeahead"} })
                @Html.ValidationMessageFor(model => model.StaffNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.StaffName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.StaffName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.StaffName, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
            @Html.LabelFor(model => model.ApplyDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class=" input-group date form_date col-md-4"  data-date="" data-date-format="dd MM yyyy" data-link-field="dtp_input2" data-link-format="yyyy-mm-dd">
                    @Html.EditorFor(model => model.ApplyDate, new { htmlAttributes = new { @class = "form-control" } })
                    <span class="input-group-addon"><span class="glyphicon glyphicon-remove"></span></span>
                    <span class="input-group-addon"><span class="glyphicon glyphicon-calendar"></span></span>
                    @Html.ValidationMessageFor(model => model.ApplyDate, "", new { @class = "text-danger" })
                  </div>
                </div>
        </div>*@

        <div class="form-group">
            @Html.LabelFor(model => model.HopeLeaveDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class=" input-group date form_date col-md-4" data-date="" data-date-format="dd MM yyyy" data-link-field="dtp_input2" data-link-format="yyyy-mm-dd">
                    @Html.EditorFor(model => model.HopeLeaveDate, new { htmlAttributes = new { @class = "form-control" } })
                    <span class="input-group-addon"><span class="glyphicon glyphicon-remove"></span></span>
                    <span class="input-group-addon"><span class="glyphicon glyphicon-calendar"></span></span>
                    @Html.ValidationMessageFor(model => model.HopeLeaveDate, "", new { @class = "text-danger" })
                </div>
                </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LeaveType, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LeaveType, new { htmlAttributes = new { @class = "form-control"} })
                @Html.ValidationMessageFor(model => model.LeaveType, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LeaveReason, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.LeaveReason,4,120,new { @class = "form-control"})
                @Html.ValidationMessageFor(model => model.LeaveReason, "", new { @class = "text-danger" })
            </div>
        </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Remark, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextAreaFor(model => model.Remark,4,120,  new { @class = "form-control" } )
                    @Html.ValidationMessageFor(model => model.Remark, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="保存" class="btn btn-default" />
                </div>
            </div>
          </div>
}

<div>
    @Html.ActionLink("返回列表", "Index")
</div>

@section Scripts {
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
}

<script>
    /*单据类别选择 */
    $('#BillTypeNumber').typeahead
    ({
        source: function (query, process) {
            $.ajax({
                url: '/StaffApplication/BillTypeNumberSearch',
                type: 'POST',
                data: { number: query },
                success: function (data) {
                    if (data.success == true) {
                        process(data.data);
                    }
                }
            })
        },
    });

    /*实现自动填充单据名称字段*/
    function sendBillTypeNumber() {
        var checkText = $('#BillTypeNumber').find("option:selected").text();
        var checkValue = $('#BillTypeNumber').val();
        checkValue = checkValue.split(" ")[0];
        $("#BillTypeNumber").val(checkValue);
        //console.info(checkValue);
        $.ajax({
            url: '/StaffApplication/SendBillTypeNumber',
            data: { BillTypeNumber: checkValue },
            type: 'POST',
            success: function (result) {
                for (var x in result) {
                    var tmp = "#" + x;//  result[x]是Value值
                    // 必须用attr方式
                    $(tmp).attr('value', result[x]);
                    //  console.info(result[x]);
                }
            },
        });
    }


    $('#BillTypeNumber').change(function () {
        //  var tmp = $('#StaffNumber').val();
        if ($('#BillTypeNumber').val() == "") {
            $(':input').val("");
        }
        else
            sendBillTypeNumber();
    });


    /*员工工号搜索*/
    $('#StaffNumber').typeahead ({
              source:
                  function (query, process) {
                      $.ajax({
                          url: '/StaffApplication/StaffNumberSearch',
                          type: 'POST',
                          data: { number: query },
                          success: function (data) {
                             // console.info("data=" + data);
                              if (data.success === true) {
                                //  console.info(data.data)
                                  /*下拉菜单*/
                                  process(data.data);
                              }
                          }
                      })
                  },
    });

    /*实现自动填充员工名字*/
    function sendData() {
        var checkText = $('#StaffNumber').find("option:selected").text();
        var checkValue = $('#StaffNumber').val();
        checkValue = checkValue.split(" ")[0];
        //console.info(checkValue);
        $("#StaffNumber").val(checkValue);
        $.ajax({
            url: '/StaffApplication/SendData',
            data: {StaffNumber:checkValue},
            type: 'POST',
            success:function (result) {
                    for (var x in result) {
                        var tmp = "#" + x;
                        $(tmp).attr('value', result[x]);
                        //console.info(result[x]);
                    }
                },
        });
    }

    $('#StaffNumber').change(function () {
      
        if ($('#StaffNumber').val() == "") {
            $(':input').val("");
        }
        else
            sendData();
    });

    /*日期插件*/
    $('.form_date').datetimepicker({
        language: 'zh-CN',
        format: 'yyyy/mm/dd',
        weekStart: 0,
        todayBtn: 1,
        autoclose: 1,
        todayHighlight: 1,
        startView: 2,
        minView: 2,
        forceParse: 0
    });
</script>
